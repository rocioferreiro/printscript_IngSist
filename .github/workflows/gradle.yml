# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Google Java Format
      # You may pin to the exact commit or the version.
      # uses: axel-op/googlejavaformat-action@5045c8c244a22eb6a28eeb6050cc2baebd75c5f2
      uses: axel-op/googlejavaformat-action@v3.4.0
      with:
        # Arguments for the Google Java Format executable
        args: --replace
        # Pattern to match files to be formatted
        # Set to true to not commit the changes
        skipCommit: false
        # Version of Google Java Format to use
        version: 1.7
        # Recommended on MacOS machines
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        # Commit message
        commitMessage: Google Java Format
        
    - name: Checkstyle for Java
    # You may pin to the exact commit or the version.
       # uses: dbelyaev/action-checkstyle@d5f61e190e8ad0a776985dcd51f7825da3d4f906
      uses: dbelyaev/action-checkstyle@v0.3.3
      with:
        # GITHUB_TOKEN
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # Working directory relative to the root directory.
        workdir: .
        # Report level for reviewdog [info, warning, error]
        level: info
        # Reporter of reviewdog command [github-pr-check, github-pr-review].
        reporter: github-pr-check
        # Filtering mode for the reviewdog command [added, diff_context, file, nofilter].
        filter_mode: added
        # Exit code for reviewdog when errors are found [true, false]
        fail_on_error: false
        # Checkstyle configuration specifies which ruleset to apply during scan.
        #There are two built-in configurations in checkstyle: [google_checks.xml, sun_checks.xml] 
        #google_checks.xml configures Checkstyle for the Google coding conventions (https://google.github.io/styleguide/javaguide.html)
        #sun_checks.xml configures Checkstyle for the Sun coding conventions (https://www.oracle.com/java/technologies/javase/codeconventions-contents.html)
        checkstyle_config: google_checks.xml
        # Checkstyle version to be used during analysis. For a list of available version numbers go to [Checkstyle release page](https://github.com/checkstyle/checkstyle/releases/).
        checkstyle_version: 8.41
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Publish
      run: ./gradlew :lexing:publish
      env:
        TOKEN: ${{ secrets.TOKEN }}
