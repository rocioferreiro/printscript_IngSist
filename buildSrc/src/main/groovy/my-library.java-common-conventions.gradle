//plugins {
//    id 'java'
//}
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    testImplementation 'junit:junit:4.13'
//}

plugins {
    id 'java'
    id 'jacoco'
//    id 'checkstyle'
//    id 'io.freefair.lombok'
//    id 'com.github.sherter.google-java-format'
    id 'maven-publish'
}

java {
    sourceCompatibility = JavaVersion.VERSION_15
    targetCompatibility = JavaVersion.VERSION_15
}

repositories {
    mavenCentral()
}

//dependencies {
//    testImplementation 'junit:junit:4.13'
//    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.19.0'
//}

test {
    useJUnitPlatform()
    //finalizedBy jacocoTestReport // report is always generated after tests run
}

//check.dependsOn jacocoTestCoverageVerification

//jacoco {
//    toolVersion = "0.8.6"
//}
//
//
//jacocoTestReport {
//    dependsOn test // tests are required to run before generating the report
//    reports {
//        xml.enabled false
//        csv.enabled false
//        html.destination file("${buildDir}/jacocoHtml")
//    }
//}
//
//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            limit {
//                counter = 'BRANCH'
//                minimum = 0.8
//            }
//        }
//    }
//}

//checkstyle {
//    toolVersion "8.41.1"
//    configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
//}
//
//checkstyleMain {
//    source = 'src/main/java'
//}
//checkstyleTest {
//    source = 'src/test/java'
//}

//task installGitHooks(type: Copy) {
//    from file("$rootDir/config/hooks")
//    into file("$rootDir/.git/hooks")
//    fileMode 0777
//}
//
//build.dependsOn installGitHooks

task wrapper(type: Wrapper) {
    gradleVersion = '6.8.3'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/rocioferreiro/printscript_IngSist")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
